# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- task: Update AssemblyInfo@1
  inputs:
    rootFolder: '$(Build.SourcesDirectory)'
    filePattern: 'AssemblyInfo.cs'
    assemblyCopyright: 'Copyright Â© 2020'
    assemblyVersion: '$(assemblyVersion)'
    assemblyFileVersion: '$(assemblyVersion)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonar cloud'
    organization: 'hiscodeness'
    scannerMode: 'MSBuild'
    projectKey: 'MvvmCross.Plugin.QRCode'
    projectName: 'MvvmCross.Plugin.QRCode'
    projectVersion: '$(version)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'nuspec/MvvmCross.Plugin.QrCode.nuspec'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'version'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget'